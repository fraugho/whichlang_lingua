// Auto-generated language detection weights
// Generated from 6 languages with 64 features
// Trained with 1000 samples per language (egalitarian)
#pragma once
#include <array>
#include <string>

enum class Lang {
    De,  // de
    En,  // en
    Es,  // es
    Fr,  // fr
    Ja,  // ja
    Zh,  // zh
};

std::string three_letter_code(Lang language) {
    switch (language) {
        case Lang::De: return "de";
        case Lang::En: return "en";
        case Lang::Es: return "es";
        case Lang::Fr: return "fr";
        case Lang::Ja: return "ja";
        case Lang::Zh: return "zh";
    }
    return "unknown";
}

const std::array<Lang, 6> LANGUAGES = {
    Lang::De,
    Lang::En,
    Lang::Es,
    Lang::Fr,
    Lang::Ja,
    Lang::Zh,
};

const std::array<float, 384> WEIGHTS = {
    -0.745976f, 2.262068f, 0.105309f, -0.451502f, -0.575175f, -0.594013f, 0.571341f, 0.389596f,
    -0.089496f, 0.403040f, -0.630025f, -0.646758f, -0.264220f, -0.133820f, -1.256206f, -0.373455f,
    2.871982f, -0.844242f, -0.456133f, 0.479987f, 0.424584f, 0.529520f, -0.510629f, -0.467847f,
    0.564569f, 0.055097f, 0.208914f, -0.027994f, -0.543950f, -0.257689f, 1.359917f, 0.639815f,
    -0.349408f, -0.598679f, -0.326506f, -0.724113f, 0.978265f, -0.424525f, 1.700963f, -0.952690f,
    -0.524278f, -0.779472f, -0.044383f, 0.763242f, -0.065229f, 0.661551f, -0.611901f, -0.703089f,
    0.579457f, 0.580651f, -0.690391f, 0.184640f, -0.432607f, -0.221787f, 0.600495f, 0.238124f,
    0.400936f, -0.350644f, -0.491680f, -0.395548f, -0.001970f, -0.209326f, 1.350849f, 0.204642f,
    -0.531118f, -0.813661f, 1.574417f, 0.156584f, -1.217577f, 0.644351f, -0.588087f, -0.569501f,
    1.088423f, 0.322017f, 0.835785f, -1.038952f, -0.792318f, -0.414662f, 0.113307f, 0.031805f,
    0.847057f, -0.225743f, -0.474500f, -0.293410f, 0.194651f, 0.474811f, 0.027721f, 0.691184f,
    -0.721001f, -0.665874f, 0.104229f, 0.254114f, 0.534173f, -0.100338f, -0.518197f, -0.274186f,
    0.600012f, 0.151090f, 0.404410f, 0.008441f, -0.269399f, -0.895330f, 0.535725f, -0.276814f,
    1.100136f, 0.343838f, -0.702885f, -1.000141f, -0.736520f, 0.472248f, 1.181900f, 0.611410f,
    -0.634405f, -0.894525f, 0.569417f, 1.188031f, -0.752892f, -0.100633f, -0.459768f, -0.444178f,
    0.073091f, 0.151678f, -0.257457f, 1.445431f, -0.686461f, -0.726140f, 0.812075f, 1.385412f,
    -0.679254f, -0.578548f, -0.472507f, -0.468791f, 2.561216f, -0.299965f, -0.836941f, -0.231265f,
    -0.639871f, -0.553783f, 0.065775f, 1.105239f, -0.362643f, 0.123276f, -0.450335f, -0.480604f,
    -0.246273f, 0.187376f, 0.881634f, 0.247451f, -0.507318f, -0.563920f, 0.500321f, -0.867323f,
    1.025419f, 0.775293f, -0.818291f, -0.615482f, -0.086818f, 1.298405f, 0.344725f, -0.156021f,
    -0.663089f, -0.737510f, 0.161857f, -1.128279f, -1.380249f, 3.986551f, -0.869814f, -0.768855f,
    -0.272435f, -0.038927f, 1.157451f, 0.305057f, -0.667630f, -0.484123f, 2.181162f, -1.343704f,
    0.442938f, 0.264791f, -0.807160f, -0.737673f, 0.567033f, -0.374013f, -0.301129f, 0.090372f,
    3.739404f, -3.720957f, 1.125841f, 0.193953f, 0.097716f, 0.078853f, -0.632983f, -0.863623f,
    -0.098529f, 0.356933f, 0.255015f, 0.912121f, -0.596684f, -0.827599f, 0.499739f, 0.634518f,
    0.140245f, 0.066392f, -0.627141f, -0.713874f, -0.129058f, 0.004613f, 1.025500f, 0.532069f,
    -0.592770f, -0.839807f, 0.591127f, 0.225987f, 0.076671f, 0.306504f, -0.574834f, -0.626182f,
    1.189057f, -0.624185f, 0.818964f, -0.339430f, -0.497633f, -0.547450f, -1.308660f, 0.672946f,
    1.394807f, 0.782212f, -0.736838f, -0.804574f, 0.120188f, 1.500397f, -0.605604f, 0.081975f,
    -0.684393f, -0.412173f, 0.355219f, 0.663177f, -0.852876f, 1.082263f, -0.526048f, -0.723670f,
    -0.229743f, 1.091071f, 0.515187f, 0.072900f, -0.813867f, -0.634821f, 1.725191f, 0.683547f,
    -0.698567f, -0.116339f, -0.885296f, -0.708587f, -0.138974f, 0.036929f, 0.286793f, 0.667712f,
    -0.671499f, -0.180367f, 1.220359f, -0.415930f, 0.452100f, -0.052172f, -0.586940f, -0.617075f,
    0.876553f, 0.461011f, 0.004184f, -0.509784f, -0.468954f, -0.363648f, 1.412209f, 0.876388f,
    -1.397748f, 0.111419f, -0.436982f, -0.565000f, -0.542121f, -0.238824f, 0.122807f, 0.093700f,
    2.429043f, -1.864907f, 0.232907f, -0.360856f, 0.691754f, 0.712568f, -0.708124f, -0.567522f,
    0.470688f, 0.651870f, 0.632815f, -0.388427f, -0.478681f, -0.889060f, -0.001340f, 0.763822f,
    0.804007f, -0.556806f, -0.533715f, -0.473909f, 0.347354f, 0.458069f, 1.194295f, -1.000827f,
    -0.439912f, -0.557822f, 1.288773f, 0.940316f, -0.250629f, -0.775773f, -0.655943f, -0.548889f,
    -0.391055f, -0.979379f, -2.534939f, -1.321810f, 1.783361f, 3.443583f, -1.376361f, 0.947867f,
    0.378681f, 1.564643f, -0.723749f, -0.791945f, -0.519150f, 0.594468f, -0.291618f, 1.327580f,
    -0.598249f, -0.511773f, 0.380362f, 1.462988f, -0.708793f, 0.012297f, -0.567848f, -0.578379f,
    0.034112f, -0.188324f, 0.386987f, 0.841352f, -0.528239f, -0.545460f, 0.459016f, 0.285350f,
    0.754929f, -0.033646f, -0.563176f, -0.901884f, -0.899170f, 0.382959f, 1.096047f, 0.582483f,
    -0.856708f, -0.305769f, 0.607016f, 0.873711f, -0.545464f, 0.433811f, -0.571975f, -0.796297f,
    1.091866f, 0.192318f, 1.085742f, -1.163005f, -0.656355f, -0.550834f, -0.010956f, 0.250534f,
    -0.338812f, 1.356904f, -0.584564f, -0.672675f, 0.071334f, -0.263579f, 1.559936f, 0.265454f,
    -0.807001f, -0.828278f, -0.253180f, -0.004067f, 1.137924f, 0.230346f, -0.452450f, -0.657948f
};

const float INTERCEPTS[6] = {
    -0.364608f, -0.047395f, 0.125090f, -0.089296f, -1.056508f, 1.431252f
};
